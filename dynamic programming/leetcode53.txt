Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

public class Solution {
    public int maxSubArray(int[] nums) {
        if(nums.length == 0) return 0;
        int result = nums[0],formerMax = nums[0];
        for(int i = 1;i < nums.length;i++){
            if(nums[i] < 0){
                if(nums[i] > formerMax){
                    formerMax = nums[i];
                }
                if(result < 0){
                    result = nums[i];
                }else{
                    result += nums[i];
                }
            }else{
                if(result < 0){
                    result = nums[i];
                }else{
                    result += nums[i];
                }
                formerMax = formerMax >= result?formerMax:result;
            }
        }
        return formerMax;
    }
}