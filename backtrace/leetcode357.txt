Given a non-negative integer n, count all numbers with unique digits, x, where 0 ¡Ü x < 10n.

Example:
Given n = 2, return 91. (The answer should be the total numbers in the range of 0 ¡Ü x < 100, excluding [11,22,33,44,55,66,77,88,99])

public class Solution {
    public int countNumbersWithUniqueDigits(int n) {//Let f(k) = count of numbers with unique digits with length equals k.
                //f(1) = 10, ..., f(k) = 9 * 9 * 8 * ... (9 - k + 2) [The first factor is 9 because a number cannot start with 0].
        if(n == 0) return 1;
        if(n == 1) return 10;
        int result = 9,start = 10;
        int time = n > 10?0:(10-n);
        for(int i = 9;i > time;i--){
            result*=i;
            start += result;
        }
        return start;
    }
}